# Adding Add book operation
openapi: 3.0.3

info:
  title: Bookshop
  version: "1.0"
  description: |
    ![OpenAPI Logo](https://avatars3.githubusercontent.com/u/16343502?v=3&s=100)

    A demo _API_ to **discover** the **_[OpenAPI Specification](https://www.openapis.org/)_**.

servers:
  - description: The base path for all resources
    url: /bookshop/v1

paths:
  /books:
    get:
      summary: Search books
      operationId: searchBooks
      parameters:
        - name: author
          in: query
          required: false
          description: "Complete or partial author name, , can be typed phonetically"
          schema:
            $ref: "#/components/schemas/QueryParameterString"
        - $ref: "#/components/parameters/Title"
      responses:
        "200":
          description: Books matching search parameters
          content:
            application/json:
                schema:
                  $ref: "#/components/schemas/Books"
    post:
      summary: Add a book
      operationId: addBook
      # Defining the request body (just like we did for the response)
      requestBody:
        content:
          application/json:
            schema:
              # It is recommended to clearly state what is expected using a subset of the "read" schema
              $ref: "#/components/schemas/BookCreate"
      responses:
        # HTTP status code: Not just a 200 OK, but a more precise 201 Created
        "201":
          description: Book added
          content:
            application/json:
              schema:
                # It is recommended to return the created resource (or at least its idea)
                $ref: "#/components/schemas/Book"


components:
  schemas:
    BookId:
      type: string
      pattern: (978|979)([0-9]{10})
      description: Book's [ISBN 13](https://www.isbn-international.org/content/what-isbn) (a standard book identifier)
    Amount:
      properties:
        value:
          type: number
          minimum: 0
        currency:
          type: string
          description: An ISO 4217 currency code
          minLength: 3
          maxLength: 3
          enum:
            - USD
            - EUR
      required:
        - value
        - currency
    Authors:
      type: array
      minItems: 1
      items:
        properties:
          id:
            type: string
            description: A unique id identifying an author
          firstName:
            type: string
          middleName:
            type: string
          lastName:
            type: string
        required:
          - id
          - firstName
          - lastName
    # What is returned in list if often a subset of a more complete schema
    BookSummary:
      properties:
        id:
          $ref: "#/components/schemas/BookId"
        isbn:
          $ref: "#/components/schemas/BookId"
        title:
          type: string
          minLength: 1
          maxLength: 100
        price:
          $ref: "#/components/schemas/Amount"
        authors:
          $ref: "#/components/schemas/Authors"
        stars:
          type: number
          exclusiveMinimum: true
          minimum: 0
          maximum: 5
      required:
        - id
        - isbn
        - title
        - price
        - authors
    Books:
      type: object  
      properties:
        data:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: "#/components/schemas/BookSummary"
    QueryParameterString:
      type: string
      maxLength: 100
      minLength: 1
    # The complete schema of the book
    Book:
      properties:
        id:
          $ref: "#/components/schemas/BookId"
        isbn:
          $ref: "#/components/schemas/BookId"
        title:
          type: string
          minLength: 1
          maxLength: 100
        price:
          $ref: "#/components/schemas/Amount"
        authors:
          $ref: "#/components/schemas/Authors"
        stars:
          type: number
          exclusiveMinimum: true
          minimum: 0
          maximum: 5
        publicationDate:
          type: string
          format: date
        pages:
          type: integer
          minimum: 1
      required:
        - id
        - isbn
        - title
        - price
        - authors
        - publicationDate
        - pages
    # A subset of Book
    # All this could be optimized to avoid duplication errors
    BookCreate:
      type: object
      properties:
        isbn:
          $ref: "#/components/schemas/BookId"
        title:
          type: string
          minLength: 1
          maxLength: 101 # Not the same value as in Book! 
        price:
          $ref: "#/components/schemas/Amount"
        authors:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/AuthorId"
        publicationDate:
          type: string
          format: date
        pages:
          type: integer
          minimum: 1
      required:
        - isbn
        - title
        - price
        - authors
        - publicationDate
        - pages
  parameters:
    Title:
      name: title
      in: query
      description: "Complete or partial title, can be typed phonetically"
      required: false
      schema:
        $ref: "#/components/schemas/QueryParameterString"    